plugins {
	id "com.commercehub.gradle.plugin.avro" version "0.99.99"
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'br.com.crinnger.interbootcamp.ecommerce'
version = '1'
sourceCompatibility = '13'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven{
		url 'http://packages.confluent.io/maven/'
	}
}

ext {
	set('springCloudVersion', "2020.0.2")
}

ext {
	set('springCloudVersion', "Hoxton.SR6")
	set('cucumberVersion', '6.6.0')
	set('testContainersVersion', '1.14.3')
	set('wireMockVersion', '2.27.2')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
	implementation 'io.confluent:kafka-avro-serializer:5.5.0'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

avro{
	fieldVisibility = "PRIVATE"
}

generateAvroJava{
	source "src/main/resources/avro"
}

sourceSets {
	main {
		java {
			srcDir "build/generated-main-avro-java/br/com/crinnger/interbootcamp/ecommerce/checkout/event"
		}
	}
}